{%- macro shape_macro(shape) -%}
    {%- if shape.type == 'Polygon' -%}
        Polygon points:[
            {%for point in shape.points%}
                ({{point[0]}} m, {{point[1]}} m) {%-if not loop.index % loop.length == 0-%},
                {%endif%}
            {%endfor%}

        ]
    {%- elif shape.type == 'Rectangle' -%}
        Rectangle width={{shape.width}} m, length={{shape.length}} m
    {%- elif shape.type == 'VerticalRectangle' -%}
        Rectangle width={{shape.width}} m, height={{shape.height}} m
    {%- else -%}
        wrong
    {%- endif -%}
{%- endmacro -%}

{# Macros for frames #}
{%- macro from_frame(world, ref, index) -%}
    {%- if world -%}
        world 
    {%- else -%}
        {%- if index == None -%}
            {{ref.name}}
        {%- else -%}
            {{ref.name}}.walls[{{index}}]
        {%- endif -%}
    {%- endif -%}
{%- endmacro -%}
{%- macro to_frame(index) -%}
    {%- if index == None -%}
        this
    {%- else -%}
        this.walls[{{index}}]
    {%- endif -%}
{%- endmacro -%}

// Generated variation of the {{name}} floor plan. 
// Seed: {{seed}}
Floor plan: {{name}}_{{seed}}

    {% for space in spaces%}
    Space {{space.name}}:
        shape: {{shape_macro(space.shape)}}
        location:
            from: {{from_frame(space.location.from.world, space.location.from.ref, space.location.from.index)}}
            to: {{to_frame(space.location.to.index)}}
            pose:
                translation: x:{{space.location.pose.translation.x}} m, y:{{space.location.pose.translation.y}} m
                rotation: {{space.location.pose.rotation}} deg
            {%+if space.location.spaced-%}spaced{%-endif+%} 
        wall thickness: {{space.wall_thickness}} m
        wall height: {{space.wall_height}} m
        {% if space.floor_features|length > 0 %}
        features:
            {%+ for feature in space.floor_features -%}
            {%+ if feature.column +%}Column{% else %}Divider{% endif +%} {{feature.name}}:
                shape: {{shape_macro(feature.shape)}}
                height: {{feature.height}} m
                from: this{%+ if not feature.from.index == None +%}.walls[{{feature.from.index}}]{%+ endif +%}
                pose: 
                    translation: x: {{feature.pose.translation.x}} m, y: {{feature.pose.translation.y}} m
                    rotation: {{feature.pose.rotation}} deg
                
            {%+ endfor -%}
        {%+ endif +%}

    {%endfor%}

    {%for wall_opening in wall_openings%}
    {%+ if wall_opening.window -%} Window {%- else -%} Entryway {%- endif +%} {{wall_opening.name}}:
        in: {{wall_opening.in.wall_a.parent.name}}.walls[{{wall_opening.in.wall_a.index}}] {%- if not wall_opening.in.wall_b == None %} and {{wall_opening.in.wall_b.parent.name}}.walls[{{wall_opening.in.wall_b.index}}]{%endif+%}
        shape: {{shape_macro(wall_opening.shape)}}
        pose:
            translation: x:{{wall_opening.pose.translation.x}} m, y:{{wall_opening.pose.translation.y}} m, z:{{wall_opening.pose.translation.z}} m
            rotation: {{wall_opening.pose.rotation}} deg

    {%endfor%}

    Default values:
        Wall thickness: {{default.wall_thickness.value}} m
        Wall height: {{default.wall_height.value}} m 